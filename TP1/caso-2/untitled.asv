clc; clear; close all;
syms T1 T2 T3 K1_C K2_C s La Ki Jm Km Bm  % Ra ya no se declara como simbólica

Ra = 2 / 0.822;  % Valor estimado experimentalmente

% Funciones de transferencia de Chen (normalizadas)
Wr_Va_Chen = K1_C / (T1*T2*s^2 + (T1 + T2)*s + 1);
Wr_TL_Chen = K2_C*(T3*s + 1) / (T1*T2*s^2 + (T1 + T2)*s + 1);

% Tus funciones estimadas (con el cero eliminado)
% Wr_Va_est = 3.765 / (0.01533*s^2 + 0.3673*s + 1);
% Wr_TL_est = -33.75*(1.750e03*s+1) / (3.234e5*s^2 + 1932*s + 1);
Wr_Va_est = 3.765 / (5.164e-05*s^2 + 0.04662*s + 1);
Wr_TL_est = 0.026*( 0.7908*s+1) / (3.234e5*s^2 + 1932*s + 1);

% Ecuaciones estructurales del modelo físico
eq1 = K1_C/(T1*T2) == Ki/(Jm*La);
eq2 = K2_C/(T1*T2) == 1/(Ra*Jm*La);
eq3 = T3 == La/Ra;
eq4 = (Bm*La + Jm*Ra)/(Jm*La) == (T1 + T2)/(T1*T2);
eq5 = (Bm*Ra + Ki*Km)/(Jm*La) == 1/(T1*T2);

% Extraídas del denominador de la función estimada ωr/Va
eq6 = T1*T2 == 0.01533;
eq7 = T1 + T2 == 0.3673;

% T3_ang =1.750e03;
% eq8 = T3 == T3_ang;


% Resolver el sistema (sin incluir Ra como incógnita)
vars = [La, Ki, Jm, Km, Bm, K1_C, K2_C, T1, T2, T3];
sols = solve([eq1, eq2, eq3, eq4, eq5, eq6, eq7], vars);

% Mostrar resultados
disp('Soluciones encontradas:')
disp(sols)

% Mostrar con formato bonito
pretty(sols.La)
pretty(sols.Ki)
pretty(sols.Jm)
pretty(sols.Km)
pretty(sols.Bm)

% Convertir a valores numéricos con vpa (usar la primera solución por ejemplo)
disp('Valores numéricos (1ra solución):')
disp('----------------------------------')
disp(['La  = ', char(vpa(sols.La(1), 6))])
disp(['Ki  = ', char(vpa(sols.Ki(1), 6))])
disp(['Jm  = ', char(vpa(sols.Jm(1), 6))])
disp(['Km  = ', char(vpa(sols.Km(1), 6))])
disp(['Bm  = ', char(vpa(sols.Bm(1), 6))])
disp(['Ra  = ', char(vpa(Ra, 6))])  % Este lo calculaste directo
%% CON Wr/Va Y Ia/Va

clc; clear; close all;
syms T1 T2 T3 K1_C K2_C s La Ki Jm Km Bm  % Ra ya no se declara como simbólica

Ra = 2 / 0.822;  % Valor estimado experimentalmente

% Funciones de transferencia de Chen (normalizadas)
Wr_Va_Chen = K1_C / (T1*T2*s^2 + (T1 + T2)*s + 1);
Wr_ia_Chen = K2_C*(T3*s + 1) / (T1*T2*s^2 + (T1 + T2)*s + 1);

% Tus funciones estimadas (con el cero eliminado)
Wr_Va_est = 3.765 / (5.164e-05*s^2 + 0.04662*s + 1);
Wr_ia_est =0.026*( 0.7908*s+1) / (5.164e-05*s^2 + 0.04662*s + 1);

% Ecuaciones estructurales del modelo físico
eq1 = K1_C/(T1*T2) == Ki/(Jm*La);
eq2 = K2_C/(T1*T2) == 1/(Ra/Jm*La);%Bm/La*Jm
eq3 = T3 == Jm/Bm;
eq4 = (Bm*La + Jm*Ra)/(Jm*La) == (T1 + T2)/(T1*T2);
eq5 = (Bm*Ra + Ki*Km)/(Jm*La) == 1/(T1*T2);

% Extraídas del denominador de la función estimada ωr/Va
eq6 = T1*T2 == 0.01533;
eq7 = T1 + T2 == 0.3673;

% T3_ang =1.750e03;
% eq8 = T3 == T3_ang;


% Resolver el sistema (sin incluir Ra como incógnita)
vars = [La, Ki, Jm, Km, Bm, K1_C, K2_C, T1, T2, T3];
sols = solve([eq1, eq2, eq3, eq4, eq5, eq6, eq7], vars);

% Mostrar resultados
disp('Soluciones encontradas:')
disp(sols)

% Mostrar con formato bonito
pretty(sols.La)
pretty(sols.Ki)
pretty(sols.Jm)
pretty(sols.Km)
pretty(sols.Bm)

% Convertir a valores numéricos con vpa (usar la primera solución por ejemplo)
disp('Valores numéricos (1ra solución):')
disp('----------------------------------')
disp(['La  = ', char(vpa(sols.La(1), 6))])
disp(['Ki  = ', char(vpa(sols.Ki(1), 6))])
disp(['Jm  = ', char(vpa(sols.Jm(1), 6))])
disp(['Km  = ', char(vpa(sols.Km(1), 6))])
disp(['Bm  = ', char(vpa(sols.Bm(1), 6))])
disp(['Ra  = ', char(vpa(Ra, 6))])  % Este lo calculaste directo

%% VALORES INICIALES - MODIFICAR ACÁ
T2 = 0.3193;
T1 = 0.0408;
T3 = 1.750e03;
K1_C = 3.765;
K2_C = 33.75;
Ra = 2.415;

% CÁLCULOS
valores = struct();

valores.Ra = Ra;
valores.Ra_T3 = Ra * T3;
valores.K1C_div_K2C_Ra = K1_C / (K2_C * Ra);
valores.T1T2_div_K2C_Ra2_T3 = (T1 * T2) / (K2_C * Ra^2 * T3);
valores.T1_T3_T2_T3_div_K1C_T3_2 = ((T1 - T3) * (T2 - T3)) / (K1_C * T3^2);
valores.term6 = (-T1 * T2 + T1 * T3 + T2 * T3) / (K2_C * Ra^2 * T3^2);

% MOSTRAR RESULTADOS
disp('--- RESULTADOS ---')
disp(['1) Ra = ', num2str(valores.Ra)])
disp(['2) La = Ra * T3 = ', num2str(valores.Ra_T3)])
disp(['3) Ki = K1_C / (K2_C * Ra) = ', num2str(valores.K1C_div_K2C_Ra)])
disp(['4) Jm = (T1 * T2) / (K2_C * Ra^2 * T3) = ', num2str(valores.T1T2_div_K2C_Ra2_T3)])
disp(['5) Km = ((T1 - T3)*(T2 - T3)) / (K1_C * T3^2) = ', num2str(valores.T1_T3_T2_T3_div_K1C_T3_2)])
disp(['6) Bm = (-T1*T2 + T1*T3 + T2*T3) / (K2_C * Ra^2 * T3^2) = ', num2str(valores.term6)])
